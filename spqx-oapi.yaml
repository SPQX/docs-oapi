openapi: "3.0.2"
info:
  description: "This is the API documentation for the management and budget services of \
  SPQ Express.  More information can be found in the links below."
  version: "0.0.1"
  title: "SPQ Express"
  termsOfService: "https://www.spqexpress.com/tos"
  contact:
    email: "jcatronspqx@gmail.com"
  license:
    name: "Private License"
    url: "https://www.spqexpress/license"
externalDocs:
  description: "Find out more about SPQ Express"
  url: "https://www.spqexpress.com"
servers:
  - url: http://localhost:8080 # todo remove this server when publishing externally
    description: Development server
  - url: http://api.spqexpress.com
    description: Production server
  - url: http://api-uat.spqexpress.com
    description: Staging server
tags:
- name: Products
  description: "Management of products used for price calculation"
  externalDocs:
    description: "For more information"
    url: "https://www.spqexpress.com/services/management"
- name: Units
  description: "Management of units used for price calculation"
  externalDocs:
    description: "For more information"
    url: "https://www.spqexpress.com/services/management"
- name: Tasks
  description: "Management of tasks used for price calculation"
  externalDocs:
    description: "For more information"
    url: "https://www.spqexpress.com/services/management"
- name: Sub Tasks
  description: "Management of sub tasks used for price calculation"
  externalDocs:
    description: "For more information"
    url: "https://www.spqexpress.com/services/management"
paths:
  /products:
    get:
      summary: List product configurations
      description: >
        This resource provides a list of products in the system.
        Each product will be unique by numeric `id`.
      responses:
        '200':
          description: A JSON object representation of a Product
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Product'
        '401':
          description: Authorization header is missing or invalid
      tags:
        - "Products"
    post:
      summary: Create a product configuration
      description: >
        This resource creates a new product configuration in the system.
        The product will be saved with the provided configuration and a
        unique `id` generated by the system.
      requestBody:
        $ref: '#/components/requestBodies/NewProductBody'
      responses:
        '200':
          $ref: '#/components/responses/ProductResponse'
      tags:
        - "Products"
    put:
      summary: Replace a product configuration
      description: >
        This resource overwrites a product configuration in the system.
        The product will be saved with the provided configuration overwriting
        the existing product found by the unique `id`.
      requestBody:
        $ref: '#/components/requestBodies/ProductBody'
      responses:
        '200':
          $ref: '#/components/responses/ProductResponse'
      tags:
        - "Products"
  /products/{product-id}:
    get:
      summary: Get a product configuration
      description: >
        This resource provides the product configuration for the
        product with the given unique `id` in the path.
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        '200':
          $ref: '#/components/responses/ProductResponse'
      tags:
        - "Products"
    delete:
      summary: Remove a product configuration
      description: >
        Removes the product configuration for the given
        unique product `id` in the path.
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        '204':
          description: Successfully removed the resource, no content will be returned
      tags:
        - "Products"
  /products/{product-id}/units:
    get:
      summary: Get a list of configured units
      description: >
        This resource provides a list of unit configurations for the
        product with the given unique `product-id` in the path.
      parameters:
        - $ref: '#/components/parameters/productId'
      responses:
        '200':
          description: A JSON object representation of a Unit
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Unit'
      tags:
        - "Units"
    post:
      summary: Configure a new unit
      description: >
        This resource creates a new unit configuration for the product with
        `product-id`. The unit will be saved with the provided configuration
        and a unique `id` generated by the system.
      parameters:
        - $ref: '#/components/parameters/productId'
      requestBody:
        $ref: '#components/requestBodies/NewUnitBody'
      responses:
        '200':
          description: A JSON object representation of a Unit
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Unit'
      tags:
        - "Units"
    put:
      summary: Replace a unit configuration
      description: >
        This resource overwrites a unit configuration in the system.
        The unit will be saved with the provided configuration overwriting
        the existing unit found by the unique `id` in the request body.
      parameters:
        - $ref: '#/components/parameters/productId'
      requestBody:
        $ref: '#components/requestBodies/UnitBody'
      responses:
        '200':
          $ref: '#/components/responses/UnitResponse'
      tags:
        - "Units"
  /products/{product-id}/units/{unit-id}:
    get:
      summary: Get a unit configuration
      description: >
        This resource provides the unit configuration for the
        unit with the given unique `unit-id` in the path.
        Supplied `product-id` must also be correct.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          $ref: '#/components/responses/UnitResponse'
      tags:
        - "Units"
    delete:
      summary: Delete a unit configuration
      description: >
        Removes the unit configuration for the given unique `product-id` and
        `unit-id` in the path.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '204':
          description: Successfully removed the resource, no content will be returned
      tags:
        - "Units"
  /products/{product-id}/{unit-id}/tasks:
    get:
      summary: Get a list of configured tasks
      description: >
        This resource provides a list of task configurations for the
        unit with the given unique `unit-id` in the path.
        The given `product-id` must match the correct unique id for the provided unit.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          description: A JSON list of Tasks
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
      tags:
        - "Tasks"
    post:
      summary: Configure a new tasks
      description: >
        This resource creates a new task configurations for the
        unit with the given unique `unit-id` in the path.
        The given `product-id` must match the correct unique id for the provided unit.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
      requestBody:
        $ref: '#/components/requestBodies/NewTaskBody'
      responses:
        '200':
          description: A JSON list of Tasks
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Task'
      tags:
        - "Tasks"
    put:
      summary: Replace a task configuration
      description: >
        This resource overwrites a task configurations for the
        unit with the given unique `unit-id` in the path.
        The given `product-id` must match the correct unique id for the provided unit.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
      requestBody:
        $ref: '#/components/requestBodies/TaskBody'
      responses:
        '200':
          $ref: '#/components/responses/TaskResponse'
      tags:
        - "Tasks"
  /products/{product-id}/{unit-id}/tasks/{task-id}:
    get:
      summary: Get a task configuration
      description: >
        This resource provides the task configuration for the
        task with the given unique `task-id` in the path.
        Supplied `product-id` and `unit-id` must also be correct.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          $ref: '#/components/responses/TaskResponse'
      tags:
        - "Tasks"
    delete:
      summary: Delete a task configuration
      description: >
        This resource removes the task configuration for the
        task with the given unique `task-id` in the path.
        Supplied `product-id` and `unit-id` must also be correct.
      parameters:
        - $ref: '#/components/parameters/productId'
        - $ref: '#/components/parameters/unitId'
        - $ref: '#/components/parameters/taskId'
      responses:
        '204':
          description: Successfully removed the resource, no content will be returned
      tags:
        - "Tasks"
  /products/{product-id}/{unit-id}/{task-id}/subtasks:
    get:
      summary: Get a product configuration
      description: >
        This resource provides the product configuration for the
        product for the given unique product `id` in the path.
      responses:

      tags:
        - "Sub Tasks"
  /products/{product-id}/{iunit-id}/{task-id}/subtasks/{subtask-id}:
    get:
      summary: Get a product configuration
      description: >
        This resource provides the product configuration for the
        product for the given unique product `id` in the path.
      responses:

      tags:
        - "Sub Tasks"
components:
  schemas: # todo required fields
    NewProduct:
      type: object
      properties:
        displayName:
          type: string
    Product:
      allOf:
        - properties:
            id:
              type: integer
        - $ref: '#/components/schemas/NewProduct'
    NewUnit:
      type: object
      properties:
        displayName:
          type: string
        location:
          type: string
        UOM:
          type: string
        countryAttribute:
          type: string #todo this should be an attribute
        country:
          type: string
        startDateAttribute:
          type: string
        startDate:
          type: string
        endDateAttribute:
          type: string
        endDate:
          type: string
        quantityFormula:
          type: string
    Unit:
      allOf:
        - properties:
            id:
              type: integer
            productId:
              type: integer
        - $ref: '#/components/schemas/NewUnit'
    NewTask:
      allOf:
        - $ref: '#/components/schemas/NewUnit'
        - properties:
            resourceAttr:
              type: string
            resource:
              type: string
            hoursFormula:
              type: string
            hours:
              type: integer
            standardHoursFormula:
              type: string
            standardHours:
              type: integer
            efficientHoursFormula:
              type: string
            efficientHours:
              type: integer
    Task:
      allOf:
        - properties:
            id:
              type: integer
            unitId:
              type: integer
        - $ref: '#/components/schemas/NewTask'

  requestBodies:
    ProductBody:
      description: A JSON object representation of a Product
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    NewProductBody:
      description: A JSON object representation of a Product
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewProduct'
    UnitBody:
      description: A JSON object representation of a Unit
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unit'
    NewUnitBody:
      description: A JSON object representation of a Unit
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewUnit'
    TaskBody:
      description: A JSON object representation of a Task
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
    NewTaskBody:
      description: A JSON object representation of a Task
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewTask'
  responses:
    ProductResponse:
      description: A JSON object representation of a Product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    UnitResponse:
      description: A JSON object representation of a Unit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unit'
    TaskResponse:
      description: A JSON object representation of a Task
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    productId:
      in: path
      name: product-id
      required: true
      schema:
        type: integer
      description: Numberic id of the product
    unitId:
      in: path
      name: unit-id
      required: true
      schema:
        type: integer
      description: Numberic id of the unit
    taskId:
      in: path
      name: task-id
      required: true
      schema:
        type: integer
      description: Numberic id of the task
security:
  - bearerAuth: []